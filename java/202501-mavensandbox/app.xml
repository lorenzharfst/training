<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">
    <bean class="com.mycompany.app.App">
    </bean>
    <!-- This is a test bean to showcase how DI (Dependency Injection) works -->
    <bean id="myDataSource" class="org.apache.commons.dhcp.BasicDataSource" destroy-method="close">
        <!-- BasicDataSource is a class made by apache (implementation of javax.sql.DataSource)
            which is configured via JavaBeans properties, that's why we can define the following props
            and it will automatically call their setters -->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <!-- These will not actually work as I have not set up any mysql db -->
        <propery name="url" value="jdbc:mysql://localhost:3306/mydb"/>
        <propery name="user" value="root"/>
        <propery name="password" value="123456"/>
    </bean>
</beans>
